/**
 * @fileoverview Utility module for cleaning up test data and log files generated
 * by `test1_pathResolution.js` and `test2_menuIntegration.js`
 *
 * @module test/clearTestData
 */
import fs from 'fs/promises'
import PATHS from './modules/paths.js'
import HELPERS from './modules/helpers.js'

/**
 * Clears text files generated by the "Path Resolution" test
 * @async
 * @function clearTextFiles_test1
 * @returns {Promise}
 */
async function clearTextFiles_test1() {
  const testDataStatus = await HELPERS.validateTest1TextFiles()
  if (testDataStatus === true) {
    await HELPERS.deleteFileIfExists(PATHS.location1, 'test1')
    await HELPERS.deleteFileIfExists(PATHS.location2, 'test1')
  } else {
    console.warn(testDataStatus)
  }
}

/**
 * Clears text file generated by the "Menu Integration" test
 * @async
 * @function clearTextFile_test2
 * @returns {Promise}
 */
async function clearTextFile_test2() {
  await HELPERS.deleteFileIfExists(PATHS.testFiles.textFile, 'test2')
}

/**
 * Clears DOCX file generated by both Test1 and Test2
 * @async
 * @function clearDocxFile
 * @returns {Promise}
 */
async function clearDocxFile() {
  try {
    const docxPath = await HELPERS.getDocxPath()
    await HELPERS.deleteFileIfExists(docxPath)
  } catch (error) {
    console.error('Error clearing DOCX test data:', error)
    throw error
  }
}

/**
 * Clears the application logs by creating empty files
 * @async
 * @function clearLogFiles
 * @returns {Promise}
 */
async function clearLogFiles() {
  try {
    // Ensure logs directory exists
    await HELPERS.ensureDirectoryExists(PATHS.logs)
    // Clear log files (write empty string to them)
    await fs.writeFile(PATHS.combinedLog, '', { flag: 'w' })
    console.log('Cleared combined.log')
    await fs.writeFile(PATHS.errorLog, '', { flag: 'w' })
    console.log('Cleared error.log')
  } catch (error) {
    console.error('Error clearing log files:', error)
    throw error
  }
}

/**
 * Main function to clear all test data
 * @async
 * @function clearAllTestData
 * @returns {Promise}
 */
async function clearAllTestData() {
  console.log('Starting to clear test data...')
  try {
    // Clear Path Resolution test data
    await clearTextFiles_test1()
    // Clear Menu Integration test data
    await clearTextFile_test2()
    // Clear DOCX test data
    await clearDocxFile()
    // Clear log files
    await clearLogFiles()
    console.log('Test data cleared successfully!')
  } catch (error) {
    console.error('Error clearing test data:', error)
    process.exit(1)
  }
}

// Execute the clearAllTestData function
clearAllTestData()
